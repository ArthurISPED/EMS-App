{"version":3,"sources":["webpack:///./src/app/newform/newform.module.ts","webpack:///./src/app/newform/newform.page.html","webpack:///./src/app/newform/newform.page.scss","webpack:///./src/app/newform/newform.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEA;AAE7C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAW;KACvB;CACF,CAAC;AAWF;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAT7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,yDAAW,CAAC;SAC5B,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB9B,ogE;;;;;;;;;;;ACAA,+DAA+D,2I;;;;;;;;;;;;;;;;;;;ACAb;AACJ;AACL;AAOzC;IAEE,qBAAoB,aAA4B,EAAU,MAAc;QAApD,kBAAa,GAAb,aAAa,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QAExE,YAAO,GAAG;YACT,IAAI,UAAU,GAAE,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC;YACrD,UAAU,CAAC,SAAS,GAAG,+DAA+D;YAEtF,IAAI,KAAK,GAAG,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC;YAC5C,UAAU,CAAC,YAAY,CAAC,OAAO,EAAE,SAAS,CAAC;YAC3C,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,QAAQ,CAAC;QAE7C,CAAC;QAEM,kBAAa,GAAY,KAAK,CAAC;IAZsC,CAAC;IActE,6BAAO,GAAd;QAEA,IAAI,CAAC,aAAa,GAAE,CAAC,IAAI,CAAC,aAAa,CAAC;IACxC,CAAC;IAED,2BAAK,GAAL;QAEA,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;IAC7C,CAAC;IAED,8BAAQ,GAAR;IACA,CAAC;IA3BU,WAAW;QALvB,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,+FAAkC;;SAEnC,CAAC;+EAGmC,4DAAa,EAAkB,sDAAM;OAF7D,WAAW,CA6BvB;IAAD,kBAAC;CAAA;AA7BuB","file":"newform-newform-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NewformPage } from './newform.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewformPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [NewformPage]\n})\nexport class NewformPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n  \\t<ion-buttons slot=\\\"start\\\">\\n  \\t\\t<ion-back-button defaultHref=\\\"/tabs/tab2\\\"></ion-back-button>\\n  \\t</ion-buttons>\\n    <ion-title>New form</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content >\\n\\t<form margin-top=\\\"5%\\\">\\n\\t\\t<ion-item border-bottom=\\\"none\\\">\\n\\t\\t\\t<h4>Description</h4>\\n\\t\\t</ion-item>\\n\\t\\t<ion-item margin-top=\\\"5%\\\">\\n\\t\\t\\t<ion-label>Title</ion-label>\\n\\t\\t\\t<ion-input required slot =\\\"end\\\" value=\\\"Form 1\\\" clearInput placeholder=\\\"Enter form title\\\"></ion-input>\\n\\t\\t</ion-item>\\n\\t<ion-item margin-top=\\\"5%\\\">\\n    <ion-label>Gender</ion-label>\\n    <ion-select placeholder=\\\"Select One\\\">\\n      <ion-select-option value=\\\"f\\\">Female</ion-select-option>\\n      <ion-select-option value=\\\"m\\\">Male</ion-select-option>\\n      <ion-select-option value=\\\"o\\\">Other</ion-select-option>\\n    </ion-select>\\n  </ion-item>\\n  <ion-item margin-top=\\\"5%\\\">\\n  \\t<ion-label>Conscious</ion-label>\\n  <ion-toggle ng-checked=\\\"true\\\" (click)=\\\"checked()\\\"></ion-toggle>\\n</ion-item>\\n<ion-item *ngIf=\\\"toggleChecked\\\">\\n\\t<ion-label *ngIf=\\\"toggleChecked\\\">Name</ion-label>\\n\\t<ion-input *ngIf=\\\"toggleChecked\\\" slot=\\\"end\\\" value =\\\"Default 1\\\" clearInput placeholder=\\\"Enter name\\\"></ion-input>\\n</ion-item>\\n<ion-item *ngIf=\\\"toggleChecked\\\">\\n\\t<ion-label *ngIf=\\\"toggleChecked\\\">Age</ion-label>\\n\\t<ion-input type=\\\"number\\\" *ngIf=\\\"toggleChecked\\\" slot=\\\"end\\\" value =\\\"20\\\" clearInput placeholder=\\\"Enter age\\\"></ion-input>\\n</ion-item>\\n<ion-item margin-top=\\\"10%\\\">\\n<h4>Comments</h4>\\n</ion-item>\\n<ion-item >\\n<ion-textarea placeholder=\\\"Enter comments here\\\"> </ion-textarea>\\n</ion-item>\\n\\n\\t<ion-button margin=\\\"auto\\\"  center expand=\\\"block\\\"  color=\\\"dark\\\" size=\\\"large\\\" (click)=\\\"photo()\\\" >\\n\\t\\t<ion-icon slot =\\\"icon-only\\\" name=\\\"camera\\\" size=\\\"large\\\"></ion-icon>\\n\\t</ion-button>\\n\\t<ion-button  id =\\\"buttontext\\\"  expand=\\\"full\\\" (click)=\\\"confirm()\\\" color=\\\"primary\\\">\\n\\t\\t\\n\\t<p>Submit</p>\\n\\t</ion-button>\\n\\n</form>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ld2Zvcm0vbmV3Zm9ybS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NavController} from '@ionic/angular';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-newform',\n  templateUrl: './newform.page.html',\n  styleUrls: ['./newform.page.scss'],\n})\nexport class NewformPage implements OnInit {\n\n  constructor(private navController: NavController, private router: Router) { }\n\n  confirm = function() {\n  \tvar buttontext= document.getElementById('buttontext')\n  \tbuttontext.innerHTML = '<ion-icon name=\"checkmark-circle\"></ion-icon><p>Submitted</p>'\n  \t\n  \tvar color = buttontext.getAttribute('color')\n  \tbuttontext.setAttribute('color', 'success')\n  \tthis.navController.navigateForward('/forms')\n  \t\n  }\n\n  public toggleChecked: boolean = false;\n\n  public checked() {\n\n  this.toggleChecked =!this.toggleChecked;\n  }\n\n  photo() {\n\n  this.navController.navigateForward('/photo');\n  }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":""}